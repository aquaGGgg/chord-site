{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import authService from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const navigate=useNavigate();const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token')||null);useEffect(()=>{if(token){try{const storedUser=localStorage.getItem('user');if(storedUser){setUser(JSON.parse(storedUser));}}catch(error){console.error(\"Ошибка при загрузке пользователя из localStorage:\",error);setUser(null);localStorage.removeItem('user');}}},[token]);const login=async(email,password)=>{try{// Логин для админа (демо-режим)\nif(email==='admin'&&password==='admin'){const userData={id:1,email:'admin',username:'Administrator'};setUser(userData);setToken('fake-admin-token');localStorage.setItem('token','fake-admin-token');localStorage.setItem('user',JSON.stringify(userData));navigate('/profile');return;}const data=await authService.login(email,password);console.log(\"Ответ от сервера:\",data);// <-- Лог для отладки!\n// Учёт того, что сервер возвращает \"Token\" с заглавной буквы\nconst returnedToken=data.Token||data.token;if(!returnedToken){throw new Error(\"Некорректный ответ сервера\");}// Так как сервер не возвращает объект user, создаём его на основе email\nconst userData={id:0,email:email,username:email};setToken(returnedToken);localStorage.setItem('token',returnedToken);setUser(userData);localStorage.setItem('user',JSON.stringify(userData));navigate('/profile');}catch(error){console.error(\"Ошибка при входе:\",error);throw error;}};const logout=()=>{setToken(null);setUser(null);localStorage.removeItem('token');localStorage.removeItem('user');navigate('/login');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","authService","jsx","_jsx","AuthContext","AuthProvider","_ref","children","navigate","user","setUser","token","setToken","localStorage","getItem","storedUser","JSON","parse","error","console","removeItem","login","email","password","userData","id","username","setItem","stringify","data","log","returnedToken","Token","Error","logout","Provider","value"],"sources":["M:/chord-site/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport authService from '../services/authService';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      try {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (storedUser) {\r\n          setUser(JSON.parse(storedUser));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Ошибка при загрузке пользователя из localStorage:\", error);\r\n        setUser(null);\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Логин для админа (демо-режим)\r\n      if (email === 'admin' && password === 'admin') {\r\n        const userData = { id: 1, email: 'admin', username: 'Administrator' };\r\n        setUser(userData);\r\n        setToken('fake-admin-token');\r\n        localStorage.setItem('token', 'fake-admin-token');\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        navigate('/profile');\r\n        return;\r\n      }\r\n  \r\n      const data = await authService.login(email, password);\r\n      console.log(\"Ответ от сервера:\", data); // <-- Лог для отладки!\r\n  \r\n      // Учёт того, что сервер возвращает \"Token\" с заглавной буквы\r\n      const returnedToken = data.Token || data.token;\r\n      if (!returnedToken) {\r\n        throw new Error(\"Некорректный ответ сервера\");\r\n      }\r\n  \r\n      // Так как сервер не возвращает объект user, создаём его на основе email\r\n      const userData = { \r\n        id: 0, \r\n        email: email, \r\n        username: email \r\n      };\r\n  \r\n      setToken(returnedToken);\r\n      localStorage.setItem('token', returnedToken);\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n  \r\n      navigate('/profile');\r\n    } catch (error) {\r\n      console.error(\"Ошибка при входе:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}