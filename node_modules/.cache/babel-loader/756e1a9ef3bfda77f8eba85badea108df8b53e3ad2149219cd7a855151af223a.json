{"ast":null,"code":"import api from './api';\nconst authService = {\n  login: async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      // Проверяем наличие error.response и error.response.data\n      if (error.response && error.response.data) {\n        throw error.response.data;\n      } else {\n        throw {\n          message: \"Ошибка при подключении к серверу\"\n        };\n      }\n    }\n  },\n  register: async (username, email, password) => {\n    try {\n      const response = await api.post('/auth/register', {\n        userName: username,\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      if (error.response && error.response.data) {\n        throw error.response.data;\n      } else {\n        throw {\n          message: \"Ошибка при подключении к серверу\"\n        };\n      }\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","authService","login","email","password","response","post","data","error","message","register","username","userName"],"sources":["E:/Project/front/chord-site/src/services/authService.js"],"sourcesContent":["import api from './api';\r\n\r\nconst authService = {\r\n  login: async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      return response.data;\r\n    } catch (error) {\r\n      // Проверяем наличие error.response и error.response.data\r\n      if (error.response && error.response.data) {\r\n        throw error.response.data;\r\n      } else {\r\n        throw { message: \"Ошибка при подключении к серверу\" };\r\n      }\r\n    }\r\n  },\r\n  register: async (username, email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/register', { userName: username, email, password });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response && error.response.data) {\r\n        throw error.response.data;\r\n      } else {\r\n        throw { message: \"Ошибка при подключении к серверу\" };\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,aAAa,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MACnE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACA,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,EAAE;QACzC,MAAMC,KAAK,CAACH,QAAQ,CAACE,IAAI;MAC3B,CAAC,MAAM;QACL,MAAM;UAAEE,OAAO,EAAE;QAAmC,CAAC;MACvD;IACF;EACF,CAAC;EACDC,QAAQ,EAAE,MAAAA,CAAOC,QAAQ,EAAER,KAAK,EAAEC,QAAQ,KAAK;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,gBAAgB,EAAE;QAAEM,QAAQ,EAAED,QAAQ;QAAER,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC1F,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,EAAE;QACzC,MAAMC,KAAK,CAACH,QAAQ,CAACE,IAAI;MAC3B,CAAC,MAAM;QACL,MAAM;UAAEE,OAAO,EAAE;QAAmC,CAAC;MACvD;IACF;EACF;AACF,CAAC;AAED,eAAeR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}