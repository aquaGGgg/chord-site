{"ast":null,"code":"import React,{useState,useContext}from'react';import{AuthContext}from'../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const{login}=useContext(AuthContext);const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState(null);const handleSubmit=async e=>{e.preventDefault();// Добавляем проверку для логина admin / admin\nif(email==='admin'&&password==='admin'){try{await login(email,password);return;// Прерываем дальнейшее выполнение если это админ\n}catch(err){setError(err.message||'Ошибка при входе');return;}}// Стандартная валидация для email\nif(!/\\S+@\\S+\\.\\S+/.test(email)){setError('Неверный формат электронной почты');return;}try{await login(email,password);}catch(err){setError(err.message||'Ошибка при входе');}};return/*#__PURE__*/_jsxs(\"div\",{style:formContainerStyle,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0412\\u0445\\u043E\\u0434\"}),error&&/*#__PURE__*/_jsx(\"div\",{style:errorStyle,children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:formStyle,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\"// Изменяем на type=\"text\", чтобы можно было вводить admin\n,placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),style:inputStyle,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:password,onChange:e=>setPassword(e.target.value),style:inputStyle,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:buttonStyle,children:\"\\u0412\\u043E\\u0439\\u0442\\u0438\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \",/*#__PURE__*/_jsx(\"a\",{href:\"/register\",children:\"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C\"})]})]});};const formContainerStyle={maxWidth:'400px',margin:'50px auto',padding:'20px',backgroundColor:'#333',color:'#fff',borderRadius:'8px'};const formStyle={display:'flex',flexDirection:'column'};const inputStyle={marginBottom:'10px',padding:'10px',borderRadius:'4px',border:'none'};const buttonStyle={padding:'10px',borderRadius:'4px',border:'none',backgroundColor:'#555',color:'#fff',cursor:'pointer'};const errorStyle={color:'red',marginBottom:'10px'};export default LoginPage;","map":{"version":3,"names":["React","useState","useContext","AuthContext","jsx","_jsx","jsxs","_jsxs","LoginPage","login","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","err","message","test","style","formContainerStyle","children","errorStyle","onSubmit","formStyle","type","placeholder","value","onChange","target","inputStyle","required","buttonStyle","href","maxWidth","margin","padding","backgroundColor","color","borderRadius","display","flexDirection","marginBottom","border","cursor"],"sources":["M:/chord-site/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst LoginPage = () => {\r\n  const { login } = useContext(AuthContext);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Добавляем проверку для логина admin / admin\r\n    if (email === 'admin' && password === 'admin') {\r\n      try {\r\n        await login(email, password);\r\n        return; // Прерываем дальнейшее выполнение если это админ\r\n      } catch (err) {\r\n        setError(err.message || 'Ошибка при входе');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Стандартная валидация для email\r\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      setError('Неверный формат электронной почты');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await login(email, password);\r\n    } catch (err) {\r\n      setError(err.message || 'Ошибка при входе');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={formContainerStyle}>\r\n      <h2>Вход</h2>\r\n      {error && <div style={errorStyle}>{error}</div>}\r\n      <form onSubmit={handleSubmit} style={formStyle}>\r\n        <input \r\n          type=\"text\" // Изменяем на type=\"text\", чтобы можно было вводить admin\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          style={inputStyle}\r\n          required\r\n        />\r\n        <input \r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          style={inputStyle}\r\n          required\r\n        />\r\n        <button type=\"submit\" style={buttonStyle}>Войти</button>\r\n      </form>\r\n      <p>\r\n        Нет аккаунта? <a href=\"/register\">Зарегистрируйтесь</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formContainerStyle = {\r\n  maxWidth: '400px',\r\n  margin: '50px auto',\r\n  padding: '20px',\r\n  backgroundColor: '#333',\r\n  color: '#fff',\r\n  borderRadius: '8px'\r\n};\r\n\r\nconst formStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column'\r\n};\r\n\r\nconst inputStyle = {\r\n  marginBottom: '10px',\r\n  padding: '10px',\r\n  borderRadius: '4px',\r\n  border: 'none'\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: '10px',\r\n  borderRadius: '4px',\r\n  border: 'none',\r\n  backgroundColor: '#555',\r\n  color: '#fff',\r\n  cursor: 'pointer'\r\n};\r\n\r\nconst errorStyle = {\r\n  color: 'red',\r\n  marginBottom: '10px'\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}