{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\components\\\\SongDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport songsService from '../services/songsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongDetails = ({\n  songId\n}) => {\n  _s();\n  const [song, setSong] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n  useEffect(() => {\n    const fetchSong = async () => {\n      if (songId) {\n        try {\n          const data = await songsService.getSong(songId);\n          setSong(data);\n          // Проверка, есть ли песня в избранном (можно сделать проверку на локальное состояние или запрос к серверу)\n          const favoriteSongs = JSON.parse(localStorage.getItem('favoriteSongs')) || [];\n          setIsFavorite(favoriteSongs.includes(songId));\n        } catch (error) {\n          console.error(\"Ошибка при загрузке песни\", error);\n        }\n      } else {\n        setSong(null);\n      }\n    };\n    fetchSong();\n  }, [songId]);\n  const toggleFavorite = () => {\n    const favoriteSongs = JSON.parse(localStorage.getItem('favoriteSongs')) || [];\n    if (isFavorite) {\n      const updatedFavorites = favoriteSongs.filter(id => id !== songId);\n      localStorage.setItem('favoriteSongs', JSON.stringify(updatedFavorites));\n    } else {\n      favoriteSongs.push(songId);\n      localStorage.setItem('favoriteSongs', JSON.stringify(favoriteSongs));\n    }\n    setIsFavorite(!isFavorite);\n  };\n  if (!song) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: detailsPlaceholderStyle,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0441\\u043D\\u044E, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0441 \\u0430\\u043A\\u043A\\u043E\\u0440\\u0434\\u0430\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: detailsContentWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: detailsContentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: titleStyle,\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleFavorite,\n          style: favoriteButtonStyle,\n          children: isFavorite ? 'Удалить из избранного' : 'Добавить в избранное'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: authorStyle,\n        children: [\"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C: \", song.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: lyricsStyle,\n        children: song.lyricsWithChords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Обёртка, которая располагает контент по центру\r\n * (горизонтально и вертикально), но оставляет вертикальную прокрутку.\r\n */\n_s(SongDetails, \"kedMCLtYqYrvULQ1Z6AlKyky7iU=\");\n_c = SongDetails;\nconst detailsContentWrapper = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  // Центрирование по вертикали\n  width: '100%',\n  height: '100vh',\n  // Чтобы центрировать по вертикали\n  padding: '20px'\n};\nconst detailsContentStyle = {\n  width: '100%',\n  maxWidth: '800px',\n  // Можно увеличить ширину для более крупного вида\n  backgroundColor: '#3d4044',\n  padding: '1.5rem',\n  borderRadius: '8px',\n  boxShadow: '0 0 10px rgba(0,0,0,0.5)',\n  fontSize: '1.2rem',\n  // Общий размер шрифта (увеличен)\n  lineHeight: '1.6' // Увеличенная межстрочная высота\n};\nconst detailsPlaceholderStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100vh',\n  color: '#ccc'\n};\nconst headerStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: '1rem'\n};\nconst titleStyle = {\n  marginTop: 0,\n  fontSize: '2rem',\n  // Увеличенный заголовок\n  fontWeight: 'bold'\n};\nconst authorStyle = {\n  color: '#ccc',\n  marginBottom: '1rem',\n  fontSize: '1.3rem' // Тоже немного увеличим\n};\nconst lyricsStyle = {\n  whiteSpace: 'pre-wrap',\n  fontFamily: 'monospace',\n  fontSize: '1.2rem',\n  // Увеличенный размер текста\n  marginTop: '1rem'\n};\nconst favoriteButtonStyle = {\n  backgroundColor: isFavorite ? '#e74c3c' : '#3498db',\n  color: '#fff',\n  border: 'none',\n  padding: '10px 15px',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\nexport default SongDetails;\nvar _c;\n$RefreshReg$(_c, \"SongDetails\");","map":{"version":3,"names":["React","useEffect","useState","songsService","jsxDEV","_jsxDEV","SongDetails","songId","_s","song","setSong","isFavorite","setIsFavorite","fetchSong","data","getSong","favoriteSongs","JSON","parse","localStorage","getItem","includes","error","console","toggleFavorite","updatedFavorites","filter","id","setItem","stringify","push","style","detailsPlaceholderStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","detailsContentWrapper","detailsContentStyle","headerStyle","titleStyle","title","onClick","favoriteButtonStyle","authorStyle","author","lyricsStyle","lyricsWithChords","_c","display","justifyContent","alignItems","width","height","padding","maxWidth","backgroundColor","borderRadius","boxShadow","fontSize","lineHeight","color","marginBottom","marginTop","fontWeight","whiteSpace","fontFamily","border","cursor","$RefreshReg$"],"sources":["M:/chord-site/src/components/SongDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport songsService from '../services/songsService';\r\n\r\nconst SongDetails = ({ songId }) => {\r\n  const [song, setSong] = useState(null);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchSong = async () => {\r\n      if (songId) {\r\n        try {\r\n          const data = await songsService.getSong(songId);\r\n          setSong(data);\r\n          // Проверка, есть ли песня в избранном (можно сделать проверку на локальное состояние или запрос к серверу)\r\n          const favoriteSongs = JSON.parse(localStorage.getItem('favoriteSongs')) || [];\r\n          setIsFavorite(favoriteSongs.includes(songId));\r\n        } catch (error) {\r\n          console.error(\"Ошибка при загрузке песни\", error);\r\n        }\r\n      } else {\r\n        setSong(null);\r\n      }\r\n    };\r\n    fetchSong();\r\n  }, [songId]);\r\n\r\n  const toggleFavorite = () => {\r\n    const favoriteSongs = JSON.parse(localStorage.getItem('favoriteSongs')) || [];\r\n    if (isFavorite) {\r\n      const updatedFavorites = favoriteSongs.filter(id => id !== songId);\r\n      localStorage.setItem('favoriteSongs', JSON.stringify(updatedFavorites));\r\n    } else {\r\n      favoriteSongs.push(songId);\r\n      localStorage.setItem('favoriteSongs', JSON.stringify(favoriteSongs));\r\n    }\r\n    setIsFavorite(!isFavorite);\r\n  };\r\n\r\n  if (!song) {\r\n    return (\r\n      <div style={detailsPlaceholderStyle}>\r\n        <p>Выберите песню, чтобы увидеть текст с аккордами</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={detailsContentWrapper}>\r\n      <div style={detailsContentStyle}>\r\n        <div style={headerStyle}>\r\n          <h2 style={titleStyle}>{song.title}</h2>\r\n          <button onClick={toggleFavorite} style={favoriteButtonStyle}>\r\n            {isFavorite ? 'Удалить из избранного' : 'Добавить в избранное'}\r\n          </button>\r\n        </div>\r\n        <h4 style={authorStyle}>Исполнитель: {song.author}</h4>\r\n        <pre style={lyricsStyle}>{song.lyricsWithChords}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Обёртка, которая располагает контент по центру\r\n * (горизонтально и вертикально), но оставляет вертикальную прокрутку.\r\n */\r\nconst detailsContentWrapper = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',  // Центрирование по вертикали\r\n  width: '100%',\r\n  height: '100vh', // Чтобы центрировать по вертикали\r\n  padding: '20px',\r\n};\r\n\r\nconst detailsContentStyle = {\r\n  width: '100%',\r\n  maxWidth: '800px',            // Можно увеличить ширину для более крупного вида\r\n  backgroundColor: '#3d4044',\r\n  padding: '1.5rem',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 0 10px rgba(0,0,0,0.5)',\r\n  fontSize: '1.2rem',           // Общий размер шрифта (увеличен)\r\n  lineHeight: '1.6',            // Увеличенная межстрочная высота\r\n};\r\n\r\nconst detailsPlaceholderStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n  height: '100vh',\r\n  color: '#ccc',\r\n};\r\n\r\nconst headerStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  marginBottom: '1rem',\r\n};\r\n\r\nconst titleStyle = {\r\n  marginTop: 0,\r\n  fontSize: '2rem',             // Увеличенный заголовок\r\n  fontWeight: 'bold',\r\n};\r\n\r\nconst authorStyle = {\r\n  color: '#ccc',\r\n  marginBottom: '1rem',\r\n  fontSize: '1.3rem',           // Тоже немного увеличим\r\n};\r\n\r\nconst lyricsStyle = {\r\n  whiteSpace: 'pre-wrap',\r\n  fontFamily: 'monospace',\r\n  fontSize: '1.2rem',           // Увеличенный размер текста\r\n  marginTop: '1rem',\r\n};\r\n\r\nconst favoriteButtonStyle = {\r\n  backgroundColor: isFavorite ? '#e74c3c' : '#3498db',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 15px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n};\r\n\r\nexport default SongDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}