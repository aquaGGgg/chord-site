{"ast":null,"code":"import api from './api';\nconst songsService = {\n  // Получение списка авторов\n  getAuthors: async () => {\n    try {\n      const response = await api.get('/songs/authors');\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  // Получение списка песен выбранного автора (предполагается наличие такого эндпоинта)\n  getSongsByAuthor: async authorId => {\n    try {\n      const response = await api.get(`/authors/${authorId}/songs`);\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  // Получение деталей песни\n  getSong: async songId => {\n    try {\n      const response = await api.get(`/songs/${songId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  }\n};\nexport default songsService;","map":{"version":3,"names":["api","songsService","getAuthors","response","get","data","error","getSongsByAuthor","authorId","getSong","songId"],"sources":["M:/chord-site/src/services/songsService.js"],"sourcesContent":["import api from './api';\r\n\r\nconst songsService = {\r\n  // Получение списка авторов\r\n  getAuthors: async () => {\r\n    try {\r\n      const response = await api.get('/songs/authors');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  },\r\n  // Получение списка песен выбранного автора (предполагается наличие такого эндпоинта)\r\n  getSongsByAuthor: async (authorId) => {\r\n    try {\r\n      const response = await api.get(`/authors/${authorId}/songs`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  },\r\n  // Получение деталей песни\r\n  getSong: async (songId) => {\r\n    try {\r\n      const response = await api.get(`/songs/${songId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  },\r\n};\r\n\r\nexport default songsService;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,YAAY,GAAG;EACnB;EACAC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,gBAAgB,CAAC;MAChD,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC3B;EACF,CAAC;EACD;EACAE,gBAAgB,EAAE,MAAOC,QAAQ,IAAK;IACpC,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,YAAYI,QAAQ,QAAQ,CAAC;MAC5D,OAAOL,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC3B;EACF,CAAC;EACD;EACAI,OAAO,EAAE,MAAOC,MAAM,IAAK;IACzB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,UAAUM,MAAM,EAAE,CAAC;MAClD,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC3B;EACF;AACF,CAAC;AAED,eAAeJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}