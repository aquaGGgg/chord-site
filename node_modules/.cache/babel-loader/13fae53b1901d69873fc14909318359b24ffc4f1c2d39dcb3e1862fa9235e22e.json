{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport * as signalR from '@microsoft/signalr';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [connection, setConnection] = useState(null);\n  useEffect(() => {\n    console.log('Создаём подключение...');\n    const newConnection = new signalR.HubConnectionBuilder().withUrl('https://localhost:55184/chatHub') // Проверьте адрес хаба!\n    .withAutomaticReconnect().build();\n    setConnection(newConnection);\n  }, []);\n  useEffect(() => {\n    if (connection) {\n      console.log('Запускаем подключение...');\n      connection.start().then(() => {\n        console.log('Успешное подключение!');\n        connection.on('ReceiveMessage', (user, msg) => {\n          console.log('Новое сообщение:', user, msg);\n          setMessages(prev => [...prev, {\n            user,\n            msg\n          }]);\n        });\n      }).catch(error => console.error('Ошибка подключения:', error));\n    }\n  }, [connection]);\n  const sendMessage = async () => {\n    if (connection && message) {\n      try {\n        await connection.invoke('SendMessage', (user === null || user === void 0 ? void 0 : user.username) || 'Аноним', message);\n        setMessage('');\n      } catch (error) {\n        console.error('Ошибка отправки сообщения:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0427\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this), \" \", msg.msg]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"as4gENichHQN3eOgWhys2PnyR5k=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useContext","signalR","AuthContext","jsxDEV","_jsxDEV","Chat","_s","user","messages","setMessages","message","setMessage","connection","setConnection","console","log","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","on","msg","prev","catch","error","sendMessage","invoke","username","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["M:/chord-site/src/context/AuthContext.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Chat = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [connection, setConnection] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Создаём подключение...');\r\n    const newConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl('https://localhost:55184/chatHub') // Проверьте адрес хаба!\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection) {\r\n      console.log('Запускаем подключение...');\r\n      connection.start()\r\n        .then(() => {\r\n          console.log('Успешное подключение!');\r\n          connection.on('ReceiveMessage', (user, msg) => {\r\n            console.log('Новое сообщение:', user, msg);\r\n            setMessages(prev => [...prev, { user, msg }]);\r\n          });\r\n        })\r\n        .catch(error => console.error('Ошибка подключения:', error));\r\n    }\r\n  }, [connection]);\r\n\r\n  const sendMessage = async () => {\r\n    if (connection && message) {\r\n      try {\r\n        await connection.invoke('SendMessage', user?.username || 'Аноним', message);\r\n        setMessage('');\r\n      } catch (error) {\r\n        console.error('Ошибка отправки сообщения:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Чат</h3>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index}><strong>{msg.user}:</strong> {msg.msg}</div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Введите сообщение\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n      />\r\n      <button onClick={sendMessage}>Отправить</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAC7C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAK,CAAC,GAAGP,UAAU,CAACE,WAAW,CAAC;EACxC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACde,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,MAAMC,aAAa,GAAG,IAAIf,OAAO,CAACgB,oBAAoB,CAAC,CAAC,CACrDC,OAAO,CAAC,iCAAiC,CAAC,CAAC;IAAA,CAC3CC,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;IAEVP,aAAa,CAACG,aAAa,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,IAAIa,UAAU,EAAE;MACdE,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCH,UAAU,CAACS,KAAK,CAAC,CAAC,CACfC,IAAI,CAAC,MAAM;QACVR,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpCH,UAAU,CAACW,EAAE,CAAC,gBAAgB,EAAE,CAAChB,IAAI,EAAEiB,GAAG,KAAK;UAC7CV,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAER,IAAI,EAAEiB,GAAG,CAAC;UAC1Cf,WAAW,CAACgB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;YAAElB,IAAI;YAAEiB;UAAI,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC;MACJ,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAIb,OAAO,CAACa,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;IAChE;EACF,CAAC,EAAE,CAACf,UAAU,CAAC,CAAC;EAEhB,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIhB,UAAU,IAAIF,OAAO,EAAE;MACzB,IAAI;QACF,MAAME,UAAU,CAACiB,MAAM,CAAC,aAAa,EAAE,CAAAtB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuB,QAAQ,KAAI,QAAQ,EAAEpB,OAAO,CAAC;QAC3EC,UAAU,CAAC,EAAE,CAAC;MAChB,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdb,OAAO,CAACa,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;EACF,CAAC;EAED,oBACEvB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZ/B,OAAA;MAAA2B,QAAA,EACGvB,QAAQ,CAAC4B,GAAG,CAAC,CAACZ,GAAG,EAAEa,KAAK,kBACvBjC,OAAA;QAAA2B,QAAA,gBAAiB3B,OAAA;UAAA2B,QAAA,GAASP,GAAG,CAACjB,IAAI,EAAC,GAAC;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACX,GAAG,CAACA,GAAG;MAAA,GAA5Ca,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA;MACEkC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mGAAmB;MAC/BC,KAAK,EAAE9B,OAAQ;MACf+B,QAAQ,EAAGC,CAAC,IAAK/B,UAAU,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACF/B,OAAA;MAAQwC,OAAO,EAAEhB,WAAY;MAAAG,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA3DID,IAAI;AAAAwC,EAAA,GAAJxC,IAAI;AA6DV,eAAeA,IAAI;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}