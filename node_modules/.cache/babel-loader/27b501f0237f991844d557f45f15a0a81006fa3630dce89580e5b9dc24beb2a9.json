{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\front\\\\chord-site\\\\src\\\\components\\\\SongDetails.jsx\",\n  _s = $RefreshSig$();\n// src/components/SongDetails.jsx\nimport React, { useEffect, useState, useContext } from 'react';\nimport songsService from '../services/songsService';\nimport { AuthContext } from '../context/AuthContext';\n\n// Хроматические ряды\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHROMATIC_SHARP = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\nconst CHROMATIC_FLAT = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\nconst SongDetails = ({\n  songId\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [song, setSong] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  // Транспонирование\n  const [transposeStep, setTransposeStep] = useState(0); // 0…11\n  const [displayedLyrics, setDisplayedLyrics] = useState('');\n  useEffect(() => {\n    const fetchSongDetails = async () => {\n      if (!songId) {\n        setSong(null);\n        setDisplayedLyrics('');\n        setTransposeStep(0);\n        return;\n      }\n      try {\n        const data = await songsService.getSong(songId);\n        setSong(data);\n        setDisplayedLyrics(data.lyricsWithChords);\n        setTransposeStep(0);\n        if (user) {\n          const favorites = await songsService.getFavorites();\n          setIsFavorite(favorites.some(fav => fav.id === songId));\n        }\n      } catch (error) {\n        console.error(\"Ошибка при загрузке песни или избранного\", error);\n      }\n    };\n    fetchSongDetails();\n  }, [songId, user]);\n  const toggleFavorite = async () => {\n    if (!user) return;\n    try {\n      if (isFavorite) {\n        await songsService.removeFavorite(songId);\n        setIsFavorite(false);\n      } else {\n        await songsService.addFavorite(songId);\n        setIsFavorite(true);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при переключении избранного\", error);\n    }\n  };\n\n  // Транспонируем один аккорд на step полутонов внутри 12-тонового круга\n  const transposeChord = (chord, step) => {\n    if (!chord || step === 0) return chord;\n    const match = chord.match(/^([A-G])([#b]?)(.*)$/);\n    if (!match) return chord;\n    let [, root, accidental, suffix] = match;\n    let useFlats = false;\n    let noteName = root;\n    if (accidental === '#') {\n      noteName += '#';\n    } else if (accidental === 'b') {\n      noteName += 'b';\n      useFlats = true;\n    }\n    let chromatic = useFlats ? CHROMATIC_FLAT : CHROMATIC_SHARP;\n    if (!chromatic.includes(noteName)) {\n      if (CHROMATIC_SHARP.includes(noteName)) chromatic = CHROMATIC_SHARP;else if (CHROMATIC_FLAT.includes(noteName)) chromatic = CHROMATIC_FLAT;\n    }\n    const idx = chromatic.findIndex(n => n === noteName);\n    if (idx < 0) return chord;\n    let newIndex = (idx + step) % 12;\n    if (newIndex < 0) newIndex += 12;\n    return chromatic[newIndex] + suffix;\n  };\n\n  // Транспонируем весь текст: ищем «токены» и для каждого токена применяем transposeChord\n  const transposeLyrics = (fullText, step) => {\n    return fullText.split('\\n').map(line => {\n      const tokens = line.split(/(\\s+)/);\n      return tokens.map(tok => {\n        if (/^\\s*$/.test(tok)) return tok;\n        return transposeChord(tok, step);\n      }).join('');\n    }).join('\\n');\n  };\n\n  // Кнопка «+»\n  const handleTransposeUp = () => {\n    if (!song) return;\n    const newStep = (transposeStep + 1) % 12;\n    setTransposeStep(newStep);\n    setDisplayedLyrics(transposeLyrics(song.lyricsWithChords, newStep));\n  };\n\n  // Кнопка «−»\n  const handleTransposeDown = () => {\n    if (!song) return;\n    const newStep = (transposeStep + 11) % 12;\n    setTransposeStep(newStep);\n    setDisplayedLyrics(transposeLyrics(song.lyricsWithChords, newStep));\n  };\n\n  // Сбросить (устанавливает 0)\n  const handleReset = () => {\n    if (!song) return;\n    setTransposeStep(0);\n    setDisplayedLyrics(song.lyricsWithChords);\n  };\n  if (!song) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: detailsPlaceholderStyle,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0441\\u043D\\u044E, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0441 \\u0430\\u043A\\u043A\\u043E\\u0440\\u0434\\u0430\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: detailsContentWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: detailsContentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: titleStyle,\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), user && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleFavorite,\n          style: {\n            ...likeButtonStyle,\n            backgroundColor: isFavorite ? '#d9534f' : '#28a745'\n          },\n          children: isFavorite ? 'Убрать из избранного' : 'В избранное'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: authorStyle,\n        children: [\"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C: \", song.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: mainContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          style: lyricsStyle,\n          children: displayedLyrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: transposePanelStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: transposeTitleStyle,\n            children: \"\\u0422\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: buttonsWrapperStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTransposeDown,\n              style: transposeButtonStyle,\n              children: \"\\u2212\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTransposeUp,\n              style: transposeButtonStyle,\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: resetWrapperStyle,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleReset,\n              style: resetButtonStyle,\n              children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: currentToneStyle,\n            children: transposeStep === 0 ? 'Оригинал' : transposeStep === 1 ? '+1 полутон' : `+${transposeStep} полутоны`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n/** Стили для всего компонента **/\n\n// Внешний обёрточный контейнер\n_s(SongDetails, \"IkPIy/R3FlOifCbwzpfFfTSt0qo=\");\n_c = SongDetails;\nconst detailsContentWrapper = {\n  display: 'flex',\n  justifyContent: 'center',\n  width: '100%'\n};\n\n// Основной бокс содержимого\nconst detailsContentStyle = {\n  width: '100%',\n  maxWidth: '900px',\n  backgroundColor: '#3d4044',\n  padding: '1.5rem',\n  borderRadius: '8px',\n  boxShadow: '0 0 10px rgba(0,0,0,0.5)',\n  fontSize: '1.2rem',\n  lineHeight: '1.6',\n  color: '#fff'\n};\n\n// Плейсхолдер, когда песня не выбрана\nconst detailsPlaceholderStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  color: '#ccc',\n  fontSize: '1.2rem'\n};\n\n// Заголовок и кнопка «Избранного»\nconst headerStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n};\nconst titleStyle = {\n  margin: 0,\n  fontSize: '2rem',\n  fontWeight: 'bold'\n};\nconst authorStyle = {\n  color: '#ccc',\n  marginTop: '0.5rem',\n  marginBottom: '1rem',\n  fontSize: '1.3rem'\n};\nconst likeButtonStyle = {\n  padding: '0.5rem 1rem',\n  fontSize: '1rem',\n  border: 'none',\n  borderRadius: '6px',\n  color: '#fff',\n  cursor: 'pointer'\n};\n\n// Стили для контейнера с текстом и боковой панелью\nconst mainContainerStyle = {\n  display: 'flex',\n  width: '100%'\n};\n\n// Блок с текстом песни\nconst lyricsStyle = {\n  flexGrow: 1,\n  whiteSpace: 'pre-wrap',\n  fontFamily: 'monospace',\n  fontSize: '1.1rem',\n  margin: 0,\n  paddingRight: '1rem',\n  overflowX: 'auto'\n};\n\n// Панель транспонирования справа\nconst transposePanelStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  minWidth: '120px',\n  marginLeft: '1rem',\n  backgroundColor: '#2e2f31',\n  padding: '0.8rem',\n  borderRadius: '6px',\n  border: '1px solid #007bff'\n};\n\n// Заголовок «Тональность»\nconst transposeTitleStyle = {\n  fontSize: '1rem',\n  marginBottom: '0.5rem',\n  color: '#fff',\n  textAlign: 'center'\n};\n\n// Обёртка для кнопок «−» и «+»\nconst buttonsWrapperStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  marginBottom: '0.5rem'\n};\n\n// Сам стиль кнопок «−»/«+»\nconst transposeButtonStyle = {\n  width: '32px',\n  height: '32px',\n  margin: '0 2px',\n  fontSize: '1.2rem',\n  backgroundColor: '#fff',\n  color: '#007bff',\n  border: '2px solid #007bff',\n  borderRadius: '4px',\n  cursor: 'pointer'\n};\n\n// Обёртка для кнопки «Сбросить»\nconst resetWrapperStyle = {\n  marginBottom: '0.5rem'\n};\n\n// Стиль кнопки «Сбросить»\nconst resetButtonStyle = {\n  background: 'none',\n  border: 'none',\n  color: '#007bff',\n  textDecoration: 'underline',\n  fontSize: '0.9rem',\n  cursor: 'pointer',\n  padding: 0\n};\n\n// Отображение текущей тональности\nconst currentToneStyle = {\n  marginTop: '0.5rem',\n  fontSize: '0.9rem',\n  color: '#ddd',\n  textAlign: 'center'\n};\nexport default SongDetails;\nvar _c;\n$RefreshReg$(_c, \"SongDetails\");","map":{"version":3,"names":["React","useEffect","useState","useContext","songsService","AuthContext","jsxDEV","_jsxDEV","CHROMATIC_SHARP","CHROMATIC_FLAT","SongDetails","songId","_s","user","song","setSong","isFavorite","setIsFavorite","transposeStep","setTransposeStep","displayedLyrics","setDisplayedLyrics","fetchSongDetails","data","getSong","lyricsWithChords","favorites","getFavorites","some","fav","id","error","console","toggleFavorite","removeFavorite","addFavorite","transposeChord","chord","step","match","root","accidental","suffix","useFlats","noteName","chromatic","includes","idx","findIndex","n","newIndex","transposeLyrics","fullText","split","map","line","tokens","tok","test","join","handleTransposeUp","newStep","handleTransposeDown","handleReset","style","detailsPlaceholderStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","detailsContentWrapper","detailsContentStyle","headerStyle","titleStyle","title","onClick","likeButtonStyle","backgroundColor","authorStyle","author","mainContainerStyle","lyricsStyle","transposePanelStyle","transposeTitleStyle","buttonsWrapperStyle","transposeButtonStyle","resetWrapperStyle","resetButtonStyle","currentToneStyle","_c","display","justifyContent","width","maxWidth","padding","borderRadius","boxShadow","fontSize","lineHeight","color","alignItems","margin","fontWeight","marginTop","marginBottom","border","cursor","flexGrow","whiteSpace","fontFamily","paddingRight","overflowX","flexDirection","minWidth","marginLeft","textAlign","height","background","textDecoration","$RefreshReg$"],"sources":["E:/Project/front/chord-site/src/components/SongDetails.jsx"],"sourcesContent":["// src/components/SongDetails.jsx\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport songsService from '../services/songsService';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\n// Хроматические ряды\r\nconst CHROMATIC_SHARP = [\r\n  'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nconst CHROMATIC_FLAT  = [\r\n  'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n\r\nconst SongDetails = ({ songId }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [song, setSong] = useState(null);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n  // Транспонирование\r\n  const [transposeStep, setTransposeStep] = useState(0); // 0…11\r\n  const [displayedLyrics, setDisplayedLyrics] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchSongDetails = async () => {\r\n      if (!songId) {\r\n        setSong(null);\r\n        setDisplayedLyrics('');\r\n        setTransposeStep(0);\r\n        return;\r\n      }\r\n      try {\r\n        const data = await songsService.getSong(songId);\r\n        setSong(data);\r\n        setDisplayedLyrics(data.lyricsWithChords);\r\n        setTransposeStep(0);\r\n\r\n        if (user) {\r\n          const favorites = await songsService.getFavorites();\r\n          setIsFavorite(favorites.some(fav => fav.id === songId));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Ошибка при загрузке песни или избранного\", error);\r\n      }\r\n    };\r\n\r\n    fetchSongDetails();\r\n  }, [songId, user]);\r\n\r\n  const toggleFavorite = async () => {\r\n    if (!user) return;\r\n    try {\r\n      if (isFavorite) {\r\n        await songsService.removeFavorite(songId);\r\n        setIsFavorite(false);\r\n      } else {\r\n        await songsService.addFavorite(songId);\r\n        setIsFavorite(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при переключении избранного\", error);\r\n    }\r\n  };\r\n\r\n  // Транспонируем один аккорд на step полутонов внутри 12-тонового круга\r\n  const transposeChord = (chord, step) => {\r\n    if (!chord || step === 0) return chord;\r\n    const match = chord.match(/^([A-G])([#b]?)(.*)$/);\r\n    if (!match) return chord;\r\n    let [ , root, accidental, suffix ] = match;\r\n    let useFlats = false;\r\n\r\n    let noteName = root;\r\n    if (accidental === '#') {\r\n      noteName += '#';\r\n    } else if (accidental === 'b') {\r\n      noteName += 'b';\r\n      useFlats = true;\r\n    }\r\n\r\n    let chromatic = useFlats ? CHROMATIC_FLAT : CHROMATIC_SHARP;\r\n    if (!chromatic.includes(noteName)) {\r\n      if (CHROMATIC_SHARP.includes(noteName)) chromatic = CHROMATIC_SHARP;\r\n      else if (CHROMATIC_FLAT.includes(noteName)) chromatic = CHROMATIC_FLAT;\r\n    }\r\n\r\n    const idx = chromatic.findIndex(n => n === noteName);\r\n    if (idx < 0) return chord;\r\n\r\n    let newIndex = (idx + step) % 12;\r\n    if (newIndex < 0) newIndex += 12;\r\n    return chromatic[newIndex] + suffix;\r\n  };\r\n\r\n  // Транспонируем весь текст: ищем «токены» и для каждого токена применяем transposeChord\r\n  const transposeLyrics = (fullText, step) => {\r\n    return fullText\r\n      .split('\\n')\r\n      .map(line => {\r\n        const tokens = line.split(/(\\s+)/);\r\n        return tokens\r\n          .map(tok => {\r\n            if (/^\\s*$/.test(tok)) return tok;\r\n            return transposeChord(tok, step);\r\n          })\r\n          .join('');\r\n      })\r\n      .join('\\n');\r\n  };\r\n\r\n  // Кнопка «+»\r\n  const handleTransposeUp = () => {\r\n    if (!song) return;\r\n    const newStep = (transposeStep + 1) % 12;\r\n    setTransposeStep(newStep);\r\n    setDisplayedLyrics(transposeLyrics(song.lyricsWithChords, newStep));\r\n  };\r\n\r\n  // Кнопка «−»\r\n  const handleTransposeDown = () => {\r\n    if (!song) return;\r\n    const newStep = (transposeStep + 11) % 12; \r\n    setTransposeStep(newStep);\r\n    setDisplayedLyrics(transposeLyrics(song.lyricsWithChords, newStep));\r\n  };\r\n\r\n  // Сбросить (устанавливает 0)\r\n  const handleReset = () => {\r\n    if (!song) return;\r\n    setTransposeStep(0);\r\n    setDisplayedLyrics(song.lyricsWithChords);\r\n  };\r\n\r\n  if (!song) {\r\n    return (\r\n      <div style={detailsPlaceholderStyle}>\r\n        <p>Выберите песню, чтобы увидеть текст с аккордами</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={detailsContentWrapper}>\r\n      <div style={detailsContentStyle}>\r\n        {/* Заголовок и кнопка избранного */}\r\n        <div style={headerStyle}>\r\n          <h2 style={titleStyle}>{song.title}</h2>\r\n          {user && (\r\n            <button\r\n              onClick={toggleFavorite}\r\n              style={{\r\n                ...likeButtonStyle,\r\n                backgroundColor: isFavorite ? '#d9534f' : '#28a745',\r\n              }}\r\n            >\r\n              {isFavorite ? 'Убрать из избранного' : 'В избранное'}\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <h4 style={authorStyle}>Исполнитель: {song.author}</h4>\r\n\r\n        {/* Основной контейнер: слева — текст, справа — панель транспонирования */}\r\n        <div style={mainContainerStyle}>\r\n          {/* Блок с текстом и аккордами */}\r\n          <pre style={lyricsStyle}>{displayedLyrics}</pre>\r\n\r\n          {/* Боковая панель транспонирования */}\r\n          <div style={transposePanelStyle}>\r\n            <div style={transposeTitleStyle}>Тональность</div>\r\n            <div style={buttonsWrapperStyle}>\r\n              <button onClick={handleTransposeDown} style={transposeButtonStyle}>−</button>\r\n              <button onClick={handleTransposeUp}   style={transposeButtonStyle}>+</button>\r\n            </div>\r\n            <div style={resetWrapperStyle}>\r\n              <button onClick={handleReset} style={resetButtonStyle}>Сбросить</button>\r\n            </div>\r\n            <div style={currentToneStyle}>\r\n              {transposeStep === 0\r\n                ? 'Оригинал'\r\n                : transposeStep === 1\r\n                ? '+1 полутон'\r\n                : `+${transposeStep} полутоны`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/** Стили для всего компонента **/\r\n\r\n// Внешний обёрточный контейнер\r\nconst detailsContentWrapper = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  width: '100%',\r\n};\r\n\r\n// Основной бокс содержимого\r\nconst detailsContentStyle = {\r\n  width: '100%',\r\n  maxWidth: '900px',\r\n  backgroundColor: '#3d4044',\r\n  padding: '1.5rem',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 0 10px rgba(0,0,0,0.5)',\r\n  fontSize: '1.2rem',\r\n  lineHeight: '1.6',\r\n  color: '#fff',\r\n};\r\n\r\n// Плейсхолдер, когда песня не выбрана\r\nconst detailsPlaceholderStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n  color: '#ccc',\r\n  fontSize: '1.2rem',\r\n};\r\n\r\n// Заголовок и кнопка «Избранного»\r\nconst headerStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst titleStyle = {\r\n  margin: 0,\r\n  fontSize: '2rem',\r\n  fontWeight: 'bold',\r\n};\r\n\r\nconst authorStyle = {\r\n  color: '#ccc',\r\n  marginTop: '0.5rem',\r\n  marginBottom: '1rem',\r\n  fontSize: '1.3rem',\r\n};\r\n\r\nconst likeButtonStyle = {\r\n  padding: '0.5rem 1rem',\r\n  fontSize: '1rem',\r\n  border: 'none',\r\n  borderRadius: '6px',\r\n  color: '#fff',\r\n  cursor: 'pointer',\r\n};\r\n\r\n// Стили для контейнера с текстом и боковой панелью\r\nconst mainContainerStyle = {\r\n  display: 'flex',\r\n  width: '100%',\r\n};\r\n\r\n// Блок с текстом песни\r\nconst lyricsStyle = {\r\n  flexGrow: 1,\r\n  whiteSpace: 'pre-wrap',\r\n  fontFamily: 'monospace',\r\n  fontSize: '1.1rem',\r\n  margin: 0,\r\n  paddingRight: '1rem',\r\n  overflowX: 'auto',\r\n};\r\n\r\n// Панель транспонирования справа\r\nconst transposePanelStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  minWidth: '120px',\r\n  marginLeft: '1rem',\r\n  backgroundColor: '#2e2f31',\r\n  padding: '0.8rem',\r\n  borderRadius: '6px',\r\n  border: '1px solid #007bff',\r\n};\r\n\r\n// Заголовок «Тональность»\r\nconst transposeTitleStyle = {\r\n  fontSize: '1rem',\r\n  marginBottom: '0.5rem',\r\n  color: '#fff',\r\n  textAlign: 'center',\r\n};\r\n\r\n// Обёртка для кнопок «−» и «+»\r\nconst buttonsWrapperStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  marginBottom: '0.5rem',\r\n};\r\n\r\n// Сам стиль кнопок «−»/«+»\r\nconst transposeButtonStyle = {\r\n  width: '32px',\r\n  height: '32px',\r\n  margin: '0 2px',\r\n  fontSize: '1.2rem',\r\n  backgroundColor: '#fff',\r\n  color: '#007bff',\r\n  border: '2px solid #007bff',\r\n  borderRadius: '4px',\r\n  cursor: 'pointer',\r\n};\r\n\r\n// Обёртка для кнопки «Сбросить»\r\nconst resetWrapperStyle = {\r\n  marginBottom: '0.5rem',\r\n};\r\n\r\n// Стиль кнопки «Сбросить»\r\nconst resetButtonStyle = {\r\n  background: 'none',\r\n  border: 'none',\r\n  color: '#007bff',\r\n  textDecoration: 'underline',\r\n  fontSize: '0.9rem',\r\n  cursor: 'pointer',\r\n  padding: 0,\r\n};\r\n\r\n// Отображение текущей тональности\r\nconst currentToneStyle = {\r\n  marginTop: '0.5rem',\r\n  fontSize: '0.9rem',\r\n  color: '#ddd',\r\n  textAlign: 'center',\r\n};\r\n\r\nexport default SongDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}