{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\components\\\\GeneralChat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as signalR from '@microsoft/signalr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralChat = () => {\n  _s();\n  const [connection, setConnection] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Создаем соединение при монтировании компонента\n  useEffect(() => {\n    const newConnection = new signalR.HubConnectionBuilder().withUrl('https://localhost:5001/chatHub') // замените на адрес вашего хаба\n    .withAutomaticReconnect().build();\n    setConnection(newConnection);\n  }, []);\n\n  // Запускаем соединение и подписываемся на событие ReceiveMessage\n  useEffect(() => {\n    if (connection) {\n      connection.start().then(() => {\n        console.log('Connected to chat hub');\n        connection.on('ReceiveMessage', (user, text) => {\n          setMessages(prev => [...prev, {\n            user,\n            text\n          }]);\n        });\n      }).catch(e => console.error('Connection failed: ', e));\n    }\n  }, [connection]);\n  const sendMessage = async () => {\n    if (connection && message) {\n      try {\n        // Вызываем метод на сервере. Здесь передаём имя пользователя и сообщение.\n        await connection.invoke('SendMessage', username, message);\n        setMessage('');\n      } catch (error) {\n        console.error('Ошибка при отправке сообщения: ', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: headerStyle,\n      children: \"\\u041E\\u0431\\u0449\\u0438\\u0439 \\u0447\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: messagesStyle,\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: messageStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: inputContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: buttonStyle,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralChat, \"hcv3jWFHXjfz247r7FmdM++Fz6M=\");\n_c = GeneralChat;\nconst containerStyle = {\n  width: '300px',\n  backgroundColor: '#2a2e33',\n  padding: '10px',\n  color: '#fff',\n  borderLeft: '1px solid #444',\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh'\n};\nconst headerStyle = {\n  margin: '0 0 10px 0',\n  textAlign: 'center'\n};\nconst messagesStyle = {\n  flex: '1',\n  overflowY: 'auto',\n  backgroundColor: '#3a3f44',\n  padding: '10px',\n  borderRadius: '5px'\n};\nconst messageStyle = {\n  marginBottom: '8px'\n};\nconst inputContainerStyle = {\n  marginTop: '10px',\n  display: 'flex',\n  flexDirection: 'column'\n};\nconst inputStyle = {\n  marginBottom: '5px',\n  padding: '5px',\n  borderRadius: '4px',\n  border: '1px solid #444'\n};\nconst buttonStyle = {\n  padding: '5px 10px',\n  backgroundColor: '#4a90e2',\n  color: '#fff',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer'\n};\nexport default GeneralChat;\nvar _c;\n$RefreshReg$(_c, \"GeneralChat\");","map":{"version":3,"names":["React","useState","useEffect","signalR","jsxDEV","_jsxDEV","GeneralChat","_s","connection","setConnection","messages","setMessages","username","setUsername","message","setMessage","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","console","log","on","user","text","prev","catch","e","error","sendMessage","invoke","style","containerStyle","children","headerStyle","fileName","_jsxFileName","lineNumber","columnNumber","messagesStyle","map","msg","index","messageStyle","inputContainerStyle","type","placeholder","value","onChange","target","inputStyle","onClick","buttonStyle","_c","width","backgroundColor","padding","color","borderLeft","display","flexDirection","height","margin","textAlign","flex","overflowY","borderRadius","marginBottom","marginTop","border","cursor","$RefreshReg$"],"sources":["M:/chord-site/src/components/GeneralChat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\nconst GeneralChat = () => {\r\n  const [connection, setConnection] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Создаем соединение при монтировании компонента\r\n  useEffect(() => {\r\n    const newConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl('https://localhost:5001/chatHub') // замените на адрес вашего хаба\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  // Запускаем соединение и подписываемся на событие ReceiveMessage\r\n  useEffect(() => {\r\n    if (connection) {\r\n      connection\r\n        .start()\r\n        .then(() => {\r\n          console.log('Connected to chat hub');\r\n          connection.on('ReceiveMessage', (user, text) => {\r\n            setMessages(prev => [...prev, { user, text }]);\r\n          });\r\n        })\r\n        .catch(e => console.error('Connection failed: ', e));\r\n    }\r\n  }, [connection]);\r\n\r\n  const sendMessage = async () => {\r\n    if (connection && message) {\r\n      try {\r\n        // Вызываем метод на сервере. Здесь передаём имя пользователя и сообщение.\r\n        await connection.invoke('SendMessage', username, message);\r\n        setMessage('');\r\n      } catch (error) {\r\n        console.error('Ошибка при отправке сообщения: ', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h3 style={headerStyle}>Общий чат</h3>\r\n      <div style={messagesStyle}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={messageStyle}>\r\n            <strong>{msg.user}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={inputContainerStyle}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ваше имя\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          style={inputStyle}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Сообщение\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          style={inputStyle}\r\n        />\r\n        <button onClick={sendMessage} style={buttonStyle}>Отправить</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst containerStyle = {\r\n  width: '300px',\r\n  backgroundColor: '#2a2e33',\r\n  padding: '10px',\r\n  color: '#fff',\r\n  borderLeft: '1px solid #444',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  height: '100vh',\r\n};\r\n\r\nconst headerStyle = {\r\n  margin: '0 0 10px 0',\r\n  textAlign: 'center',\r\n};\r\n\r\nconst messagesStyle = {\r\n  flex: '1',\r\n  overflowY: 'auto',\r\n  backgroundColor: '#3a3f44',\r\n  padding: '10px',\r\n  borderRadius: '5px',\r\n};\r\n\r\nconst messageStyle = {\r\n  marginBottom: '8px',\r\n};\r\n\r\nconst inputContainerStyle = {\r\n  marginTop: '10px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n};\r\n\r\nconst inputStyle = {\r\n  marginBottom: '5px',\r\n  padding: '5px',\r\n  borderRadius: '4px',\r\n  border: '1px solid #444',\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: '5px 10px',\r\n  backgroundColor: '#4a90e2',\r\n  color: '#fff',\r\n  border: 'none',\r\n  borderRadius: '4px',\r\n  cursor: 'pointer',\r\n};\r\n\r\nexport default GeneralChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}