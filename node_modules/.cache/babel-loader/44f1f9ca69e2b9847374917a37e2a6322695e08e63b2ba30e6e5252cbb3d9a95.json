{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as signalR from '@microsoft/signalr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  songId\n}) => {\n  _s();\n  const [connection, setConnection] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [user, setUser] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Создаем подключение к SignalR-хабу\n    const newConnection = new signalR.HubConnectionBuilder().withUrl('https://localhost:5001/chatHub') // Замените URL на ваш реальный адрес хаба\n    .withAutomaticReconnect().build();\n    setConnection(newConnection);\n  }, []);\n  useEffect(() => {\n    if (connection) {\n      connection.start().then(() => {\n        console.log('Connected to chat hub');\n\n        // Подписываемся на получение сообщений от сервера\n        connection.on('ReceiveMessage', (sender, text) => {\n          setMessages(prev => [...prev, {\n            sender,\n            text\n          }]);\n        });\n      }).catch(e => console.error('Connection failed: ', e));\n    }\n  }, [connection]);\n  const sendMessage = async () => {\n    if (connection && message) {\n      try {\n        // Вызов метода на сервере. Если требуется передавать songId, добавьте его в параметры.\n        await connection.invoke('SendMessage', 1, message); // Пример: пользователь с id = 1\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: chatContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0427\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatMessagesStyle,\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: chatMessageStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatInputContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n        value: user,\n        onChange: e => setUser(e.target.value),\n        style: chatInputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        style: chatInputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: chatButtonStyle,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"pt9om8wX/s1Bj2UiM6dK5n9TDY0=\");\n_c = Chat;\nconst chatContainerStyle = {\n  backgroundColor: '#2a2e33',\n  color: '#fff',\n  padding: '1rem',\n  borderRadius: '8px',\n  marginTop: '1rem'\n};\nconst chatMessagesStyle = {\n  height: '200px',\n  overflowY: 'auto',\n  marginBottom: '1rem',\n  backgroundColor: '#3a3f44',\n  padding: '0.5rem',\n  borderRadius: '8px'\n};\nconst chatMessageStyle = {\n  marginBottom: '0.5rem'\n};\nconst chatInputContainerStyle = {\n  display: 'flex',\n  gap: '0.5rem'\n};\nconst chatInputStyle = {\n  flex: 1,\n  padding: '0.5rem',\n  borderRadius: '4px',\n  border: '1px solid #4a4f55'\n};\nconst chatButtonStyle = {\n  padding: '0.5rem 1rem',\n  borderRadius: '4px',\n  backgroundColor: '#4a90e2',\n  color: '#fff',\n  border: 'none',\n  cursor: 'pointer'\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","signalR","jsxDEV","_jsxDEV","Chat","songId","_s","connection","setConnection","messages","setMessages","user","setUser","message","setMessage","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","console","log","on","sender","text","prev","catch","e","error","sendMessage","invoke","style","chatContainerStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","chatMessagesStyle","map","msg","index","chatMessageStyle","chatInputContainerStyle","type","placeholder","value","onChange","target","chatInputStyle","onClick","chatButtonStyle","_c","backgroundColor","color","padding","borderRadius","marginTop","height","overflowY","marginBottom","display","gap","flex","border","cursor","$RefreshReg$"],"sources":["M:/chord-site/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\nconst Chat = ({ songId }) => {\r\n  const [connection, setConnection] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [user, setUser] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Создаем подключение к SignalR-хабу\r\n    const newConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl('https://localhost:5001/chatHub') // Замените URL на ваш реальный адрес хаба\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection) {\r\n      connection.start()\r\n        .then(() => {\r\n          console.log('Connected to chat hub');\r\n\r\n          // Подписываемся на получение сообщений от сервера\r\n          connection.on('ReceiveMessage', (sender, text) => {\r\n            setMessages(prev => [...prev, { sender, text }]);\r\n          });\r\n        })\r\n        .catch(e => console.error('Connection failed: ', e));\r\n    }\r\n  }, [connection]);\r\n\r\n  const sendMessage = async () => {\r\n    if (connection && message) {\r\n      try {\r\n        // Вызов метода на сервере. Если требуется передавать songId, добавьте его в параметры.\r\n        await connection.invoke('SendMessage', 1, message); // Пример: пользователь с id = 1\r\n        setMessage('');\r\n      } catch (error) {\r\n        console.error('Error sending message:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={chatContainerStyle}>\r\n      <h3>Чат</h3>\r\n      <div style={chatMessagesStyle}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={chatMessageStyle}>\r\n            <strong>{msg.sender}: </strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={chatInputContainerStyle}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ваше имя\"\r\n          value={user}\r\n          onChange={(e) => setUser(e.target.value)}\r\n          style={chatInputStyle}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Сообщение\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          style={chatInputStyle}\r\n        />\r\n        <button onClick={sendMessage} style={chatButtonStyle}>Отправить</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst chatContainerStyle = {\r\n  backgroundColor: '#2a2e33',\r\n  color: '#fff',\r\n  padding: '1rem',\r\n  borderRadius: '8px',\r\n  marginTop: '1rem'\r\n};\r\n\r\nconst chatMessagesStyle = {\r\n  height: '200px',\r\n  overflowY: 'auto',\r\n  marginBottom: '1rem',\r\n  backgroundColor: '#3a3f44',\r\n  padding: '0.5rem',\r\n  borderRadius: '8px'\r\n};\r\n\r\nconst chatMessageStyle = {\r\n  marginBottom: '0.5rem'\r\n};\r\n\r\nconst chatInputContainerStyle = {\r\n  display: 'flex',\r\n  gap: '0.5rem'\r\n};\r\n\r\nconst chatInputStyle = {\r\n  flex: 1,\r\n  padding: '0.5rem',\r\n  borderRadius: '4px',\r\n  border: '1px solid #4a4f55'\r\n};\r\n\r\nconst chatButtonStyle = {\r\n  padding: '0.5rem 1rem',\r\n  borderRadius: '4px',\r\n  backgroundColor: '#4a90e2',\r\n  color: '#fff',\r\n  border: 'none',\r\n  cursor: 'pointer'\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}