{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\pages\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AuthorsList from '../components/AuthorsList';\nimport SongsList from '../components/SongsList';\nimport SongDetails from '../components/SongDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n  const [selectedSong, setSelectedSong] = useState(null);\n  const handleSelectAuthor = author => {\n    setSelectedAuthor(author);\n    setSelectedSong(null);\n  };\n  const handleSelectSong = song => {\n    setSelectedSong(song);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: songsColumnStyle,\n      children: /*#__PURE__*/_jsxDEV(SongsList, {\n        author: selectedAuthor,\n        onSelectSong: handleSelectSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: authorsColumnStyle,\n      children: /*#__PURE__*/_jsxDEV(AuthorsList, {\n        onSelectAuthor: handleSelectAuthor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: detailsColumnStyle,\n      children: /*#__PURE__*/_jsxDEV(SongDetails, {\n        songId: selectedSong ? selectedSong.id : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"paP7/FDWgxi3Rg61JoeK8XGqif8=\");\n_c = HomePage;\nconst containerStyle = {\n  display: 'flex',\n  height: 'calc(100vh - 60px)',\n  background: 'linear-gradient(135deg, #1e1e1e, #3a3a3a)',\n  fontFamily: \"'Roboto', sans-serif\",\n  color: '#fff'\n};\n\n/** Левая колонка: Песни */\nconst songsColumnStyle = {\n  width: '280px',\n  minWidth: '280px',\n  borderRight: '1px solid #444',\n  backgroundColor: '#2a2e33'\n};\n\n/** Средняя колонка: Исполнители */\nconst authorsColumnStyle = {\n  width: '220px',\n  minWidth: '220px',\n  borderRight: '1px solid #444',\n  backgroundColor: '#23272a'\n};\n\n/** Правая колонка: Детали песни */\nconst detailsColumnStyle = {\n  flex: 1,\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'flex-start',\n  padding: '1rem',\n  overflowY: 'auto'\n};\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","AuthorsList","SongsList","SongDetails","jsxDEV","_jsxDEV","HomePage","_s","selectedAuthor","setSelectedAuthor","selectedSong","setSelectedSong","handleSelectAuthor","author","handleSelectSong","song","style","containerStyle","children","songsColumnStyle","onSelectSong","fileName","_jsxFileName","lineNumber","columnNumber","authorsColumnStyle","onSelectAuthor","detailsColumnStyle","songId","id","_c","display","height","background","fontFamily","color","width","minWidth","borderRight","backgroundColor","flex","justifyContent","alignItems","padding","overflowY","$RefreshReg$"],"sources":["M:/chord-site/src/pages/HomePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AuthorsList from '../components/AuthorsList';\r\nimport SongsList from '../components/SongsList';\r\nimport SongDetails from '../components/SongDetails';\r\n\r\nconst HomePage = () => {\r\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\r\n  const [selectedSong, setSelectedSong] = useState(null);\r\n\r\n  const handleSelectAuthor = (author) => {\r\n    setSelectedAuthor(author);\r\n    setSelectedSong(null);\r\n  };\r\n\r\n  const handleSelectSong = (song) => {\r\n    setSelectedSong(song);\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      {/* 1. Левая колонка: песни */}\r\n      <div style={songsColumnStyle}>\r\n        <SongsList author={selectedAuthor} onSelectSong={handleSelectSong} />\r\n      </div>\r\n\r\n      {/* 2. Средняя колонка: исполнители */}\r\n      <div style={authorsColumnStyle}>\r\n        <AuthorsList onSelectAuthor={handleSelectAuthor} />\r\n      </div>\r\n\r\n      {/* 3. Правая колонка: детали песни */}\r\n      <div style={detailsColumnStyle}>\r\n        <SongDetails songId={selectedSong ? selectedSong.id : null} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst containerStyle = {\r\n  display: 'flex',\r\n  height: 'calc(100vh - 60px)',\r\n  background: 'linear-gradient(135deg, #1e1e1e, #3a3a3a)',\r\n  fontFamily: \"'Roboto', sans-serif\",\r\n  color: '#fff',\r\n};\r\n\r\n/** Левая колонка: Песни */\r\nconst songsColumnStyle = {\r\n  width: '280px',\r\n  minWidth: '280px',\r\n  borderRight: '1px solid #444',\r\n  backgroundColor: '#2a2e33',\r\n};\r\n\r\n/** Средняя колонка: Исполнители */\r\nconst authorsColumnStyle = {\r\n  width: '220px',\r\n  minWidth: '220px',\r\n  borderRight: '1px solid #444',\r\n  backgroundColor: '#23272a',\r\n};\r\n\r\n/** Правая колонка: Детали песни */\r\nconst detailsColumnStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'flex-start',\r\n  padding: '1rem',\r\n  overflowY: 'auto',\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMY,kBAAkB,GAAIC,MAAM,IAAK;IACrCJ,iBAAiB,CAACI,MAAM,CAAC;IACzBF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMG,gBAAgB,GAAIC,IAAI,IAAK;IACjCJ,eAAe,CAACI,IAAI,CAAC;EACvB,CAAC;EAED,oBACEV,OAAA;IAAKW,KAAK,EAAEC,cAAe;IAAAC,QAAA,gBAEzBb,OAAA;MAAKW,KAAK,EAAEG,gBAAiB;MAAAD,QAAA,eAC3Bb,OAAA,CAACH,SAAS;QAACW,MAAM,EAAEL,cAAe;QAACY,YAAY,EAAEN;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eAGNnB,OAAA;MAAKW,KAAK,EAAES,kBAAmB;MAAAP,QAAA,eAC7Bb,OAAA,CAACJ,WAAW;QAACyB,cAAc,EAAEd;MAAmB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAGNnB,OAAA;MAAKW,KAAK,EAAEW,kBAAmB;MAAAT,QAAA,eAC7Bb,OAAA,CAACF,WAAW;QAACyB,MAAM,EAAElB,YAAY,GAAGA,YAAY,CAACmB,EAAE,GAAG;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/BID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAiCd,MAAMW,cAAc,GAAG;EACrBc,OAAO,EAAE,MAAM;EACfC,MAAM,EAAE,oBAAoB;EAC5BC,UAAU,EAAE,2CAA2C;EACvDC,UAAU,EAAE,sBAAsB;EAClCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMhB,gBAAgB,GAAG;EACvBiB,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE,gBAAgB;EAC7BC,eAAe,EAAE;AACnB,CAAC;;AAED;AACA,MAAMd,kBAAkB,GAAG;EACzBW,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE,gBAAgB;EAC7BC,eAAe,EAAE;AACnB,CAAC;;AAED;AACA,MAAMZ,kBAAkB,GAAG;EACzBa,IAAI,EAAE,CAAC;EACPT,OAAO,EAAE,MAAM;EACfU,cAAc,EAAE,QAAQ;EACxBC,UAAU,EAAE,YAAY;EACxBC,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE;AACb,CAAC;AAED,eAAetC,QAAQ;AAAC,IAAAwB,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}