{"ast":null,"code":"import api from'./api';const authService={login:async(email,password)=>{try{const response=await api.post('/auth/login',{email,password});return response.data;}catch(error){// Проверяем наличие error.response и error.response.data\nif(error.response&&error.response.data){throw error.response.data;}else{throw{message:\"Ошибка при подключении к серверу\"};}}},register:async(username,email,password)=>{try{const response=await api.post('/auth/register',{userName:username,email,password});return response.data;}catch(error){if(error.response&&error.response.data){throw error.response.data;}else{throw{message:\"Ошибка при подключении к серверу\"};}}}};export default authService;","map":{"version":3,"names":["api","authService","login","email","password","response","post","data","error","message","register","username","userName"],"sources":["M:/chord-site/src/services/authService.js"],"sourcesContent":["import api from './api';\r\n\r\nconst authService = {\r\n  login: async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      return response.data;\r\n    } catch (error) {\r\n      // Проверяем наличие error.response и error.response.data\r\n      if (error.response && error.response.data) {\r\n        throw error.response.data;\r\n      } else {\r\n        throw { message: \"Ошибка при подключении к серверу\" };\r\n      }\r\n    }\r\n  },\r\n  register: async (username, email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/register', { userName: username, email, password });\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response && error.response.data) {\r\n        throw error.response.data;\r\n      } else {\r\n        throw { message: \"Ошибка при подключении к серверу\" };\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,KAAM,CAAAC,WAAW,CAAG,CAClBC,KAAK,CAAE,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CAChC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAAC,aAAa,CAAE,CAAEH,KAAK,CAAEC,QAAS,CAAC,CAAC,CACnE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd;AACA,GAAIA,KAAK,CAACH,QAAQ,EAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAE,CACzC,KAAM,CAAAC,KAAK,CAACH,QAAQ,CAACE,IAAI,CAC3B,CAAC,IAAM,CACL,KAAM,CAAEE,OAAO,CAAE,kCAAmC,CAAC,CACvD,CACF,CACF,CAAC,CACDC,QAAQ,CAAE,KAAAA,CAAOC,QAAQ,CAAER,KAAK,CAAEC,QAAQ,GAAK,CAC7C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAAC,gBAAgB,CAAE,CAAEM,QAAQ,CAAED,QAAQ,CAAER,KAAK,CAAEC,QAAS,CAAC,CAAC,CAC1F,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,GAAIA,KAAK,CAACH,QAAQ,EAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAE,CACzC,KAAM,CAAAC,KAAK,CAACH,QAAQ,CAACE,IAAI,CAC3B,CAAC,IAAM,CACL,KAAM,CAAEE,OAAO,CAAE,kCAAmC,CAAC,CACvD,CACF,CACF,CACF,CAAC,CAED,cAAe,CAAAR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}