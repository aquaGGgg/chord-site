{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\components\\\\SongDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport songsService from '../services/songsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongDetails = ({\n  songId\n}) => {\n  _s();\n  const [song, setSong] = useState(null);\n  useEffect(() => {\n    const fetchSong = async () => {\n      if (songId) {\n        try {\n          const data = await songsService.getSong(songId);\n          setSong(data);\n        } catch (error) {\n          console.error(\"Ошибка при загрузке песни\", error);\n        }\n      }\n    };\n    fetchSong();\n  }, [songId]);\n  if (!song) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0441\\u043D\\u044E \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: detailsStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: song.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u0410\\u0432\\u0442\\u043E\\u0440: \", song.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: lyricsStyle,\n      children: song.lyricsWithChords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SongDetails, \"wje36Xz4GlCVRKG350oK37vQCDI=\");\n_c = SongDetails;\nconst detailsStyle = {\n  padding: '10px',\n  flex: 2,\n  backgroundColor: '#555',\n  color: '#fff',\n  height: '100vh',\n  overflowY: 'auto'\n};\nconst lyricsStyle = {\n  whiteSpace: 'pre-wrap',\n  fontFamily: 'monospace'\n};\nexport default SongDetails;\nvar _c;\n$RefreshReg$(_c, \"SongDetails\");","map":{"version":3,"names":["React","useEffect","useState","songsService","jsxDEV","_jsxDEV","SongDetails","songId","_s","song","setSong","fetchSong","data","getSong","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","detailsStyle","title","author","lyricsStyle","lyricsWithChords","_c","flex","backgroundColor","color","height","overflowY","whiteSpace","fontFamily","$RefreshReg$"],"sources":["M:/chord-site/src/components/SongDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport songsService from '../services/songsService';\r\n\r\nconst SongDetails = ({ songId }) => {\r\n  const [song, setSong] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSong = async () => {\r\n      if (songId) {\r\n        try {\r\n          const data = await songsService.getSong(songId);\r\n          setSong(data);\r\n        } catch (error) {\r\n          console.error(\"Ошибка при загрузке песни\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchSong();\r\n  }, [songId]);\r\n\r\n  if (!song) {\r\n    return <div style={{ padding: '10px' }}>Выберите песню для просмотра</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={detailsStyle}>\r\n      <h2>{song.title}</h2>\r\n      <h4>Автор: {song.author}</h4>\r\n      <pre style={lyricsStyle}>{song.lyricsWithChords}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst detailsStyle = {\r\n  padding: '10px',\r\n  flex: 2,\r\n  backgroundColor: '#555',\r\n  color: '#fff',\r\n  height: '100vh',\r\n  overflowY: 'auto'\r\n};\r\n\r\nconst lyricsStyle = {\r\n  whiteSpace: 'pre-wrap',\r\n  fontFamily: 'monospace'\r\n};\r\n\r\nexport default SongDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIJ,MAAM,EAAE;QACV,IAAI;UACF,MAAMK,IAAI,GAAG,MAAMT,YAAY,CAACU,OAAO,CAACN,MAAM,CAAC;UAC/CG,OAAO,CAACE,IAAI,CAAC;QACf,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF;IACF,CAAC;IACDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACE,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAKW,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5E;EAEA,oBACEjB,OAAA;IAAKW,KAAK,EAAEO,YAAa;IAAAL,QAAA,gBACvBb,OAAA;MAAAa,QAAA,EAAKT,IAAI,CAACe;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBjB,OAAA;MAAAa,QAAA,GAAI,kCAAO,EAACT,IAAI,CAACgB,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7BjB,OAAA;MAAKW,KAAK,EAAEU,WAAY;MAAAR,QAAA,EAAET,IAAI,CAACkB;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACd,EAAA,CA5BIF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA8BjB,MAAMiB,YAAY,GAAG;EACnBN,OAAO,EAAE,MAAM;EACfY,IAAI,EAAE,CAAC;EACPC,eAAe,EAAE,MAAM;EACvBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,OAAO;EACfC,SAAS,EAAE;AACb,CAAC;AAED,MAAMP,WAAW,GAAG;EAClBQ,UAAU,EAAE,UAAU;EACtBC,UAAU,EAAE;AACd,CAAC;AAED,eAAe7B,WAAW;AAAC,IAAAsB,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}