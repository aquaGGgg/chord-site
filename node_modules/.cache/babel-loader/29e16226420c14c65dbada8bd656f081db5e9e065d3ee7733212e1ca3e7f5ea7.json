{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\components\\\\SongsList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport songsService from '../services/songsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongsList = ({\n  author,\n  onSelectSong\n}) => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      if (author) {\n        try {\n          const data = await songsService.getSongsByAuthor(author);\n          setSongs(data);\n        } catch (error) {\n          console.error(\"Ошибка при загрузке песен\", error);\n        }\n      }\n    };\n    fetchSongs();\n  }, [author]);\n  if (!author) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: contentStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\u041F\\u0435\\u0441\\u043D\\u0438 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430: \", author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: listStyle,\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => onSelectSong(song),\n        style: itemStyle,\n        children: song.title\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SongsList, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = SongsList;\nconst contentStyle = {\n  padding: '10px',\n  flex: 1,\n  backgroundColor: '#444',\n  color: '#fff',\n  height: '100vh',\n  overflowY: 'auto'\n};\nconst listStyle = {\n  listStyleType: 'none',\n  padding: 0\n};\nconst itemStyle = {\n  padding: '5px',\n  cursor: 'pointer'\n};\nexport default SongsList;\nvar _c;\n$RefreshReg$(_c, \"SongsList\");","map":{"version":3,"names":["React","useEffect","useState","songsService","jsxDEV","_jsxDEV","SongsList","author","onSelectSong","_s","songs","setSongs","fetchSongs","data","getSongsByAuthor","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","contentStyle","listStyle","map","song","onClick","itemStyle","title","id","_c","flex","backgroundColor","color","height","overflowY","listStyleType","cursor","$RefreshReg$"],"sources":["M:/chord-site/src/components/SongsList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport songsService from '../services/songsService';\r\n\r\nconst SongsList = ({ author, onSelectSong }) => {\r\n  const [songs, setSongs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      if (author) {\r\n        try {\r\n          const data = await songsService.getSongsByAuthor(author);\r\n          setSongs(data);\r\n        } catch (error) {\r\n          console.error(\"Ошибка при загрузке песен\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchSongs();\r\n  }, [author]);\r\n\r\n  if (!author) {\r\n    return <div style={{ padding: '10px' }}>Выберите автора</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={contentStyle}>\r\n      <h3>Песни автора: {author}</h3>\r\n      <ul style={listStyle}>\r\n        {songs.map((song) => (\r\n          <li key={song.id} onClick={() => onSelectSong(song)} style={itemStyle}>\r\n            {song.title}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst contentStyle = {\r\n  padding: '10px',\r\n  flex: 1,\r\n  backgroundColor: '#444',\r\n  color: '#fff',\r\n  height: '100vh',\r\n  overflowY: 'auto'\r\n};\r\n\r\nconst listStyle = {\r\n  listStyleType: 'none',\r\n  padding: 0\r\n};\r\n\r\nconst itemStyle = {\r\n  padding: '5px',\r\n  cursor: 'pointer'\r\n};\r\n\r\nexport default SongsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIL,MAAM,EAAE;QACV,IAAI;UACF,MAAMM,IAAI,GAAG,MAAMV,YAAY,CAACW,gBAAgB,CAACP,MAAM,CAAC;UACxDI,QAAQ,CAACE,IAAI,CAAC;QAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF;IACF,CAAC;IACDH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACA,MAAM,EAAE;IACX,oBAAOF,OAAA;MAAKY,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/D;EAEA,oBACElB,OAAA;IAAKY,KAAK,EAAEO,YAAa;IAAAL,QAAA,gBACvBd,OAAA;MAAAc,QAAA,GAAI,uEAAc,EAACZ,MAAM;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BlB,OAAA;MAAIY,KAAK,EAAEQ,SAAU;MAAAN,QAAA,EAClBT,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACdtB,OAAA;QAAkBuB,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACmB,IAAI,CAAE;QAACV,KAAK,EAAEY,SAAU;QAAAV,QAAA,EACnEQ,IAAI,CAACG;MAAK,GADJH,IAAI,CAACI,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAjCIH,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAmCf,MAAMkB,YAAY,GAAG;EACnBN,OAAO,EAAE,MAAM;EACfe,IAAI,EAAE,CAAC;EACPC,eAAe,EAAE,MAAM;EACvBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,OAAO;EACfC,SAAS,EAAE;AACb,CAAC;AAED,MAAMZ,SAAS,GAAG;EAChBa,aAAa,EAAE,MAAM;EACrBpB,OAAO,EAAE;AACX,CAAC;AAED,MAAMW,SAAS,GAAG;EAChBX,OAAO,EAAE,KAAK;EACdqB,MAAM,EAAE;AACV,CAAC;AAED,eAAejC,SAAS;AAAC,IAAA0B,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}