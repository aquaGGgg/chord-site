{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\components\\\\SongDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport songsService from '../services/songsService';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongDetails = ({\n  songId\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [song, setSong] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n  useEffect(() => {\n    const fetchSong = async () => {\n      if (songId) {\n        try {\n          const data = await songsService.getSong(songId);\n          setSong(data);\n          if (user) {\n            // Получаем список избранных песен пользователя с сервера\n            const favorites = await songsService.getFavorites(user.id);\n            // Проверяем, есть ли текущая песня в избранном\n            setIsFavorite(favorites.some(fav => fav.id === songId));\n          }\n        } catch (error) {\n          console.error(\"Ошибка при загрузке песни\", error);\n        }\n      } else {\n        setSong(null);\n      }\n    };\n    fetchSong();\n  }, [songId, user]);\n  const toggleFavorite = async () => {\n    if (!user) {\n      console.error(\"Пользователь не авторизован\");\n      return;\n    }\n    try {\n      if (isFavorite) {\n        // Отправляем запрос на удаление песни из избранного\n        await songsService.removeFavorite(user.id, songId);\n      } else {\n        // Отправляем запрос на добавление песни в избранное\n        await songsService.addFavorite(user.id, songId);\n      }\n      setIsFavorite(!isFavorite);\n    } catch (error) {\n      console.error(\"Ошибка при обновлении избранного\", error);\n    }\n  };\n  if (!song) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: detailsPlaceholderStyle,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0441\\u043D\\u044E, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0441 \\u0430\\u043A\\u043A\\u043E\\u0440\\u0434\\u0430\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: detailsContentWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: detailsContentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: titleStyle,\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleFavorite,\n          style: getFavoriteButtonStyle(isFavorite),\n          children: isFavorite ? 'Удалить из избранного' : 'Добавить в избранное'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: authorStyle,\n        children: [\"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C: \", song.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: lyricsStyle,\n        children: song.lyricsWithChords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Стили для компонента SongDetails\r\n */\n_s(SongDetails, \"Zbcm2Zxt2ZmEhN1GH+PpK4cGwFw=\");\n_c = SongDetails;\nconst detailsContentWrapper = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100vh',\n  padding: '20px'\n};\nconst detailsContentStyle = {\n  width: '100%',\n  maxWidth: '800px',\n  backgroundColor: '#3d4044',\n  padding: '1.5rem',\n  borderRadius: '8px',\n  boxShadow: '0 0 10px rgba(0,0,0,0.5)',\n  fontSize: '1.2rem',\n  lineHeight: '1.6'\n};\nconst detailsPlaceholderStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100vh',\n  color: '#ccc'\n};\nconst headerStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: '1rem'\n};\nconst titleStyle = {\n  marginTop: 0,\n  fontSize: '2rem',\n  fontWeight: 'bold'\n};\nconst authorStyle = {\n  color: '#ccc',\n  marginBottom: '1rem',\n  fontSize: '1.3rem'\n};\nconst lyricsStyle = {\n  whiteSpace: 'pre-wrap',\n  fontFamily: 'monospace',\n  fontSize: '1.2rem',\n  marginTop: '1rem'\n};\nconst getFavoriteButtonStyle = isFavorite => ({\n  backgroundColor: isFavorite ? '#e74c3c' : '#3498db',\n  color: '#fff',\n  border: 'none',\n  padding: '10px 15px',\n  borderRadius: '5px',\n  cursor: 'pointer'\n});\nexport default SongDetails;\nvar _c;\n$RefreshReg$(_c, \"SongDetails\");","map":{"version":3,"names":["React","useContext","useEffect","useState","songsService","AuthContext","jsxDEV","_jsxDEV","SongDetails","songId","_s","user","song","setSong","isFavorite","setIsFavorite","fetchSong","data","getSong","favorites","getFavorites","id","some","fav","error","console","toggleFavorite","removeFavorite","addFavorite","style","detailsPlaceholderStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","detailsContentWrapper","detailsContentStyle","headerStyle","titleStyle","title","onClick","getFavoriteButtonStyle","authorStyle","author","lyricsStyle","lyricsWithChords","_c","display","justifyContent","alignItems","width","height","padding","maxWidth","backgroundColor","borderRadius","boxShadow","fontSize","lineHeight","color","marginBottom","marginTop","fontWeight","whiteSpace","fontFamily","border","cursor","$RefreshReg$"],"sources":["M:/chord-site/src/components/SongDetails.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport songsService from '../services/songsService';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst SongDetails = ({ songId }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [song, setSong] = useState(null);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchSong = async () => {\r\n      if (songId) {\r\n        try {\r\n          const data = await songsService.getSong(songId);\r\n          setSong(data);\r\n          if (user) {\r\n            // Получаем список избранных песен пользователя с сервера\r\n            const favorites = await songsService.getFavorites(user.id);\r\n            // Проверяем, есть ли текущая песня в избранном\r\n            setIsFavorite(favorites.some(fav => fav.id === songId));\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Ошибка при загрузке песни\", error);\r\n        }\r\n      } else {\r\n        setSong(null);\r\n      }\r\n    };\r\n    fetchSong();\r\n  }, [songId, user]);\r\n\r\n  const toggleFavorite = async () => {\r\n    if (!user) {\r\n      console.error(\"Пользователь не авторизован\");\r\n      return;\r\n    }\r\n    try {\r\n      if (isFavorite) {\r\n        // Отправляем запрос на удаление песни из избранного\r\n        await songsService.removeFavorite(user.id, songId);\r\n      } else {\r\n        // Отправляем запрос на добавление песни в избранное\r\n        await songsService.addFavorite(user.id, songId);\r\n      }\r\n      setIsFavorite(!isFavorite);\r\n    } catch (error) {\r\n      console.error(\"Ошибка при обновлении избранного\", error);\r\n    }\r\n  };\r\n\r\n  if (!song) {\r\n    return (\r\n      <div style={detailsPlaceholderStyle}>\r\n        <p>Выберите песню, чтобы увидеть текст с аккордами</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={detailsContentWrapper}>\r\n      <div style={detailsContentStyle}>\r\n        <div style={headerStyle}>\r\n          <h2 style={titleStyle}>{song.title}</h2>\r\n          <button onClick={toggleFavorite} style={getFavoriteButtonStyle(isFavorite)}>\r\n            {isFavorite ? 'Удалить из избранного' : 'Добавить в избранное'}\r\n          </button>\r\n        </div>\r\n        <h4 style={authorStyle}>Исполнитель: {song.author}</h4>\r\n        <pre style={lyricsStyle}>{song.lyricsWithChords}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Стили для компонента SongDetails\r\n */\r\nconst detailsContentWrapper = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n  height: '100vh',\r\n  padding: '20px',\r\n};\r\n\r\nconst detailsContentStyle = {\r\n  width: '100%',\r\n  maxWidth: '800px',\r\n  backgroundColor: '#3d4044',\r\n  padding: '1.5rem',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 0 10px rgba(0,0,0,0.5)',\r\n  fontSize: '1.2rem',\r\n  lineHeight: '1.6',\r\n};\r\n\r\nconst detailsPlaceholderStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n  height: '100vh',\r\n  color: '#ccc',\r\n};\r\n\r\nconst headerStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  marginBottom: '1rem',\r\n};\r\n\r\nconst titleStyle = {\r\n  marginTop: 0,\r\n  fontSize: '2rem',\r\n  fontWeight: 'bold',\r\n};\r\n\r\nconst authorStyle = {\r\n  color: '#ccc',\r\n  marginBottom: '1rem',\r\n  fontSize: '1.3rem',\r\n};\r\n\r\nconst lyricsStyle = {\r\n  whiteSpace: 'pre-wrap',\r\n  fontFamily: 'monospace',\r\n  fontSize: '1.2rem',\r\n  marginTop: '1rem',\r\n};\r\n\r\nconst getFavoriteButtonStyle = (isFavorite) => ({\r\n  backgroundColor: isFavorite ? '#e74c3c' : '#3498db',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 15px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n});\r\n\r\nexport default SongDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}