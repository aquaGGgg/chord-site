{"ast":null,"code":"\"use strict\";\n\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NullLogger = void 0;\n/** A logger that does nothing when log messages are sent to it. */\nclass NullLogger {\n  constructor() {}\n  /** @inheritDoc */\n  // eslint-disable-next-line\n  log(_logLevel, _message) {}\n}\nexports.NullLogger = NullLogger;\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\nNullLogger.instance = new NullLogger();","map":{"version":3,"names":["NullLogger","constructor","log","_logLevel","_message","exports","instance"],"sources":["M:\\chord-site\\node_modules\\@microsoft\\signalr\\src\\Loggers.ts"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n"],"mappings":";;AAAA;AACA;;;;;AAIA;AACA,MAAaA,UAAU;EAInBC,YAAA,GAAuB;EAEvB;EACA;EACOC,GAAGA,CAACC,SAAmB,EAAEC,QAAgB,GAChD;;AATJC,OAAA,CAAAL,UAAA,GAAAA,UAAA;AACI;AACcA,UAAA,CAAAM,QAAQ,GAAY,IAAIN,UAAU,EAAE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}