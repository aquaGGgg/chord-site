{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\components\\\\SongsList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport songsService from '../services/songsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongsList = ({\n  author,\n  onSelectSong\n}) => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      if (author) {\n        try {\n          const data = await songsService.getSongsByAuthor(author);\n          setSongs(data);\n        } catch (error) {\n          console.error(\"Ошибка при загрузке песен\", error);\n        }\n      }\n    };\n    fetchSongs();\n  }, [author]);\n  if (!author) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: placeholderStyle,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044F, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u0435\\u0441\\u0435\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: songsContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: headingStyle,\n      children: [\"\\u041F\\u0435\\u0441\\u043D\\u0438: \", author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: listStyle,\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => onSelectSong(song),\n        style: itemStyle,\n        children: song.title\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SongsList, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = SongsList;\nconst songsContainerStyle = {\n  height: '100%',\n  backgroundColor: '#2a2e33',\n  padding: '1rem',\n  overflowY: 'auto',\n  color: '#fff'\n};\nconst headingStyle = {\n  marginTop: 0,\n  marginBottom: '1rem',\n  fontSize: '1.2rem',\n  fontWeight: 'bold'\n};\nconst listStyle = {\n  listStyleType: 'none',\n  padding: 0,\n  margin: 0\n};\nconst itemStyle = {\n  padding: '0.75rem',\n  marginBottom: '0.5rem',\n  cursor: 'pointer',\n  borderRadius: '8px',\n  transition: 'background-color 0.3s',\n  fontSize: '1rem',\n  backgroundColor: '#3a3f44',\n  color: '#fff',\n  border: '1px solid #4a4f55'\n};\nconst placeholderStyle = {\n  height: '100%',\n  backgroundColor: '#2a2e33',\n  padding: '1rem',\n  color: '#ccc'\n};\nexport default SongsList;\nvar _c;\n$RefreshReg$(_c, \"SongsList\");","map":{"version":3,"names":["React","useEffect","useState","songsService","jsxDEV","_jsxDEV","SongsList","author","onSelectSong","_s","songs","setSongs","fetchSongs","data","getSongsByAuthor","error","console","style","placeholderStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","songsContainerStyle","headingStyle","listStyle","map","song","onClick","itemStyle","title","id","_c","height","backgroundColor","padding","overflowY","color","marginTop","marginBottom","fontSize","fontWeight","listStyleType","margin","cursor","borderRadius","transition","border","$RefreshReg$"],"sources":["M:/chord-site/src/components/SongsList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport songsService from '../services/songsService';\r\n\r\nconst SongsList = ({ author, onSelectSong }) => {\r\n  const [songs, setSongs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      if (author) {\r\n        try {\r\n          const data = await songsService.getSongsByAuthor(author);\r\n          setSongs(data);\r\n        } catch (error) {\r\n          console.error(\"Ошибка при загрузке песен\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchSongs();\r\n  }, [author]);\r\n\r\n  if (!author) {\r\n    return (\r\n      <div style={placeholderStyle}>\r\n        <p>Выберите исполнителя, чтобы увидеть список песен</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={songsContainerStyle}>\r\n      <h3 style={headingStyle}>Песни: {author}</h3>\r\n      <ul style={listStyle}>\r\n        {songs.map((song) => (\r\n          <li \r\n            key={song.id} \r\n            onClick={() => onSelectSong(song)} \r\n            style={itemStyle}\r\n          >\r\n            {song.title}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst songsContainerStyle = {\r\n  height: '100%',\r\n  backgroundColor: '#2a2e33',\r\n  padding: '1rem',\r\n  overflowY: 'auto',\r\n  color: '#fff',\r\n};\r\n\r\nconst headingStyle = {\r\n  marginTop: 0,\r\n  marginBottom: '1rem',\r\n  fontSize: '1.2rem',\r\n  fontWeight: 'bold',\r\n};\r\n\r\nconst listStyle = {\r\n  listStyleType: 'none',\r\n  padding: 0,\r\n  margin: 0,\r\n};\r\n\r\nconst itemStyle = {\r\n  padding: '0.75rem',\r\n  marginBottom: '0.5rem',\r\n  cursor: 'pointer',\r\n  borderRadius: '8px',\r\n  transition: 'background-color 0.3s',\r\n  fontSize: '1rem',\r\n  backgroundColor: '#3a3f44',\r\n  color: '#fff',\r\n  border: '1px solid #4a4f55',\r\n};\r\n\r\nconst placeholderStyle = {\r\n  height: '100%',\r\n  backgroundColor: '#2a2e33',\r\n  padding: '1rem',\r\n  color: '#ccc',\r\n};\r\n\r\nexport default SongsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}