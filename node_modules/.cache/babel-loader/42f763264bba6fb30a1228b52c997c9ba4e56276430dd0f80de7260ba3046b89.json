{"ast":null,"code":"var _jsxFileName = \"M:\\\\chord-site\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  useEffect(() => {\n    if (token) {\n      try {\n        const storedUser = localStorage.getItem(\"user\");\n        if (storedUser) {\n          setUser(JSON.parse(storedUser));\n        }\n      } catch (error) {\n        console.error(\"Ошибка загрузки пользователя из localStorage:\", error);\n        setUser(null);\n        localStorage.removeItem(\"user\");\n      }\n    }\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const data = await authService.login(email, password);\n      console.log(\"Ответ от сервера (логин):\", data);\n      const returnedToken = data.token || data.Token;\n      if (!returnedToken) throw new Error(\"Ошибка: Токен не получен\");\n      const userData = {\n        id: data.id || 0,\n        email: email,\n        username: email\n      };\n      setToken(returnedToken);\n      localStorage.setItem(\"token\", returnedToken);\n      setUser(userData);\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      navigate(\"/profile\");\n    } catch (error) {\n      console.error(\"Ошибка входа:\", error);\n      throw error;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const data = await authService.register(username, email, password);\n      console.log(\"Ответ от сервера (регистрация):\", data);\n      const returnedToken = data.token || data.Token;\n      if (!returnedToken) throw new Error(\"Ошибка: Токен не получен\");\n      const userData = {\n        id: data.id || 0,\n        email: email,\n        username: username\n      };\n      setToken(returnedToken);\n      localStorage.setItem(\"token\", returnedToken);\n      setUser(userData);\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      navigate(\"/profile\");\n    } catch (error) {\n      console.error(\"Ошибка регистрации:\", error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"49dZ0Pg+1FFd3aKiQh3kBq2paXk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","navigate","user","setUser","token","setToken","localStorage","getItem","storedUser","JSON","parse","error","console","removeItem","login","email","password","data","log","returnedToken","Token","Error","userData","id","username","setItem","stringify","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["M:/chord-site/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport authService from \"../services/authService\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      try {\r\n        const storedUser = localStorage.getItem(\"user\");\r\n        if (storedUser) {\r\n          setUser(JSON.parse(storedUser));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Ошибка загрузки пользователя из localStorage:\", error);\r\n        setUser(null);\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n    }\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const data = await authService.login(email, password);\r\n      console.log(\"Ответ от сервера (логин):\", data);\r\n\r\n      const returnedToken = data.token || data.Token;\r\n      if (!returnedToken) throw new Error(\"Ошибка: Токен не получен\");\r\n\r\n      const userData = {\r\n        id: data.id || 0,\r\n        email: email,\r\n        username: email,\r\n      };\r\n\r\n      setToken(returnedToken);\r\n      localStorage.setItem(\"token\", returnedToken);\r\n      setUser(userData);\r\n      localStorage.setItem(\"user\", JSON.stringify(userData));\r\n\r\n      navigate(\"/profile\");\r\n    } catch (error) {\r\n      console.error(\"Ошибка входа:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const data = await authService.register(username, email, password);\r\n      console.log(\"Ответ от сервера (регистрация):\", data);\r\n\r\n      const returnedToken = data.token || data.Token;\r\n      if (!returnedToken) throw new Error(\"Ошибка: Токен не получен\");\r\n\r\n      const userData = {\r\n        id: data.id || 0,\r\n        email: email,\r\n        username: username,\r\n      };\r\n\r\n      setToken(returnedToken);\r\n      localStorage.setItem(\"token\", returnedToken);\r\n      setUser(userData);\r\n      localStorage.setItem(\"user\", JSON.stringify(userData));\r\n\r\n      navigate(\"/profile\");\r\n    } catch (error) {\r\n      console.error(\"Ошибка регистрации:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}